/* Create database schema */
CREATE DATABASE `new_schema`;

/* Accounts table */
CREATE TABLE `new_schema`.`ACCOUNTS` (
  `ACCOUNT_ID` INT NOT NULL,
  `FIRST_NAME` VARCHAR(45) NOT NULL,
  `LAST_NAME` VARCHAR(45) NOT NULL,
  `EMAIL` VARCHAR(45) NOT NULL,
  `PASSWORD` VARCHAR(45) NOT NULL,
  `DEGREE` VARCHAR(45) NOT NULL,
  `SECRET_QUESTION` VARCHAR(45) NOT NULL,
  `SECRET_ANSWER` VARCHAR(45) NOT NULL,
  `ISADMIN` TINYINT(1) NOT NULL,
  `ISAUTH` TINYINT(1) NOT NULL,
  PRIMARY KEY (`ACCOUNT_ID`));
  
  /* FAQ table */
CREATE TABLE `new_schema`.`SUPPORT_QUESTIONS` (
  `SUPPORT_QUESTION_ID` INT NOT NULL,
  `QUESTION` VARCHAR(255) NOT NULL,
  `CREATED_BY` INT NOT NULL,
  `ANSWER` VARCHAR(255) NULL,
  `ANSWERED_BY` INT NULL,
  `DATE_CREATED` DATE NOT NULL,
  `DATE_LAST_MODIFIED` DATE NULL,
  PRIMARY KEY (`SUPPORT_QUESTION_ID`));
  
   /* Indexes for FAQ table */
ALTER TABLE `new_schema`.`SUPPORT_QUESTIONS` 
ADD INDEX `CREATED_BY_FK_idx` (`CREATED_BY` ASC) VISIBLE,
ADD INDEX `ANSWERED_BY_FK_idx` (`ANSWERED_BY` ASC) VISIBLE;
;
/* Foreign keys for FAQ table */
ALTER TABLE `new_schema`.`SUPPORT_QUESTIONS` 
ADD CONSTRAINT `FK_CREATED_BY`
  FOREIGN KEY (`CREATED_BY`)
  REFERENCES `new_schema`.`ACCOUNTS` (`ACCOUNT_ID`)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
ADD CONSTRAINT `FK_ANSWERED_BY`
  FOREIGN KEY (`ANSWERED_BY`)
  REFERENCES `new_schema`.`ACCOUNTS` (`ACCOUNT_ID`)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
  
  /* Events table */
  CREATE TABLE `new_schema`.`EVENTS` (
  `EVENT_ID` INT NOT NULL,
  `NAME` VARCHAR(45) NOT NULL,
  `DESCRIPTION` VARCHAR(255) NULL,
  `EVENT_CREATED_BY` INT NOT NULL,
  `DATE` DATE NULL,
  `LINK` VARCHAR(100) NULL, /* For the virtual events */
  PRIMARY KEY (`EVENT_ID`));
 
/* Foreign key for EVENTS table */ 
ALTER TABLE `new_schema`.`EVENTS` 
ADD CONSTRAINT `FK_EVENT_CREATED_BY`
  FOREIGN KEY (`EVENT_CREATED_BY`)
  REFERENCES `new_schema`.`ACCOUNTS` (`ACCOUNT_ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

/* Table for events that is attended by a specific account */  
CREATE TABLE `new_schema`.`ACCOUNT_EVENTS` (
  `ACCOUNT_ID` INT NOT NULL,
  `EVENT_ID` INT NOT NULL,
  KEY `FK_ACC_ID_idx` (`ACCOUNT_ID`),
  KEY `FK_EV_ID_idx` (`EVENT_ID`),
  CONSTRAINT `FK_ACCOUNT_ID` FOREIGN KEY (`ACCOUNT_ID`) REFERENCES `new_schema`.`ACCOUNTS` (`ACCOUNT_ID`),
  CONSTRAINT `FK_EVENT_ID` FOREIGN KEY (`EVENT_ID`) REFERENCES `new_schema`.`EVENTS` (`EVENT_ID`)
);
